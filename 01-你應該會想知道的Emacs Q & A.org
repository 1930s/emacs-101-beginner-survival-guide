* 常見問題
我們從一些大家最常問的問題開始：

** 什麼？還有人在用 Emacs 這種古董喔？
很不幸的，還有。只是似乎越來越少...

  [[file:pic/trend1.png]]
  [[file:pic/trend.png]]

  但如果你看 MELPA（Emacs 的第三方外掛套件庫）的成長速度與活躍程度，應大可放心，Emacs 仍是個使用者群廣大的軟體，不用怕遇到問題沒有解答。

** 我用Vim，該不該跳船啊

#+BEGIN_QUOTE
(01時45分25秒) caasih: 認真問，跳 editor 的陣痛期大概多長？（凡人 ver.
(01時45分53秒) letoh: 雖然我還是每天用 vim，但真心覺得 vim 在寫程式這方面實在太弱....靠一堆 addon 應該勉強看得到車尾燈XD
(01時46分20秒) letoh: 像我現在主要是改設定檔  看 log 會用 vim
(01時46分38秒) letoh: 之前用 vim script 寫了不少看 log 和 debug 工具，懶得移植到 emacs 了XD
Lee1092 letoh 
(01時47分52秒) letoh: 然後平常大概除了寫 c 就是寫 python，少了 c-c c-c 的 vim 實在用不下去XD
#+END_QUOTE

#+BEGIN_QUOTE
我覺得不用想跳不跳的，原本(在 Vim 裡)用的做不好就想辦法弄好，或針對單一功能跳船就好。

我覺得 Vim 要跨出去相對簡單很多，因為 Vim 不太有把所有工作都丟進同一個環境做的習慣，但 Emacs 有....

我其實不覺得這樣比較好，但 Emacs 的整合能力會讓這件事的吸引力變強... 我跳船十幾年了還在抵抗這個引力XD 現在唯一成功逃脫的是 IRC... 因為真的會無法專心

-- letoh
#+END_QUOTE


** Emacs 要很多很麻煩的設定用起來才會順手？
  這要看你要求 Emacs *做到多少事情。*

  例如 Emacs 已經有為各種語言內建基本的編輯功能與 Syntax highlight，通常不用額外設定就可以直接使用。然而如果你需要 auto completion（例如 Python 的 Jedi），設定就常常會很煩人。這是 Emacs 的弱項，不像 IDE 那樣一裝好連 completion 都有了。雖然 Emacs 本來就只是編輯器。

#+BEGIN_QUOTE
  我個人非常挑剔 UX，所以就會覺得 Emacs 沒有設定過簡直不能用。

  不過像 Emacs 台灣社群裡的 kanru 說 Emacs 預設值他就覺得很好用了。甚至有人只有不到 100 行的設定也用得很開心，然而我光 Dired 的設定就超過 100 行了。

  是有不少新手包，據說幾乎不用自己寫什麼設定，不過我有強迫症會覺得髒髒的所以從來沒用過。

  -- kuanyui
#+END_QUOTE

** Emacs 很肥啟動很慢？
 有什麼關係，反正 Emacs 一啟動後根本就不關的。

 不過啟動速度慢也有很容易的解決方案，後面再提。

  不要拿 Vim 的使用邏輯放在 Emacs 上，兩者設計理念差太多了。Vim 一開始就是要做編輯器，但 Emacs 一開始是想做個 Lisp 環境。

#+BEGIN_QUOTE
如果你是使用 Vim 的 programmer，你可能不會每天開 Vim 寫程式；\\
是如果你是 Emacser，你每天都會把 Emacs 開著放在桌面上。
#+END_QUOTE

** 據說一直壓 Ctrl 很容易受傷？
#+BEGIN_QUOTE
其實我沒特別感覺，長時間使用也沒怎樣。\\
有個很常被提出的解決方案是把 Ctrl 跟 CapsLock 鍵交換，但我個人沒這樣做，因為一般 Ctrl 位置我按了三年半了也沒受傷。所以我無法告訴你這種方法是否真的比較順手。

-- kuanyui
#+END_QUOTE

#+BEGIN_QUOTE
其實要看個人感受喔.... \\
我使用 emacs 7 年後開始發現小拇指有點點不太舒服，所以就將 Ctrl 和 CapsLock 交換了。不過其實我覺得 CapsLock 比較好按就是了 ~

-- coldnew
#+END_QUOTE

** 一定要先學會 Emacs Lisp 或什麼語言嗎？
一樣，看你期望讓 Emacs 做哪些事。

其實說真的，先把英文學好可能比先學會 Lisp 重要得多。先不說 Emacs 自帶的文件全是英文，目前網路上的 Emacs 資源、教學、文件 85% 也都是英文，剩下 14.9% 則是日文，所以努力把英文唸好吧。

如果只是一般使用，不會 Lisp 也沒太大關係。安裝/設定各種外掛也只要按照他們的 README 複製貼上設定檔就行了。

然而如果你想讓 Emacs 完全聽你的話，當個 Emacs 魔法師、寫你需要的外掛的話，當然就要學 Lisp 了。後面會提到入門方法。


* 優缺點整理
  既然已經有那麼多其他 editors 了，請給我一些非用 Emacs 不可的理由？

1. Org-mode, Dired 這兩個功能打趴其他所有編輯器。
2. Org-mode 是至今我心目中無人能敵的超變態的筆記 + GTD + 出版軟體。（這是我當初學 Emacs 而不是 Vim 的主要理由之一）
3. 學一套，幾乎什麼平台都能用。
4. 可純鍵盤操作，出門沒帶滑鼠也不覺得少了什麼。
5. 有純 CLI 界面，遠端 ssh 操作或 tty 也完全沒問題。
6. 很多 UNIX 工具也是採用 Emacs-flavored 的 key-binding，尤其是 GNU 出品的。例如  =info= 、 =less= 、甚至  =bash= / =zsh=  的預設操作方式也都是 Emacs-flavored 的，用起來很熟悉。
7. 歷史悠久，所以很多你想得到、想不到的方便功能幾乎都有人做過。舉凡一套完整的 Terminal Emulator、[[http://kuanyui.github.io/2014/06/21/dired-tutorial-and-essential-configs/][檔案管理員]]、 [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Serial-Terminal.html][Serial Terminal]]到 [[https://github.com/hayamiz/twittering-mode][Twitter 的 client]]、[[https://github.com/skeeto/elfeed][RSS reader]]。
8. Emacs Lisp 是個頗為完整的語言，還可以順便學 Lisp。拿來代替其他腳本語言做一些常用的文字處理功能或拋棄式程式挺方便，隨時覺得什麼文字編輯操作不順手就順手寫一個，不需要再弄什麼外部程式，例如我自己就常常拿它來：

   - [[https://github.com/kuanyui/writing-utils.el/blob/master/page-title.el][在貼上網址後，自動去抓網頁的標題加上去。]]
   - [[https://github.com/kuanyui/writing-utils.el/blob/master/flickr.el][貼上 Flickr 網址後，直接去抓圖片的 raw link。]]
   - [[https://github.com/kuanyui/moedict.el][查《萌典》。]]
   - [[https://github.com/kuanyui/ta.el][快速修改「她他它祂牠」這種同音字]]

9. 免費又 Open Source，不用擔心被專有軟體綁住，這是個學一次就可以用一輩子的編輯器。

** 缺點
Emacs 的劣勢是：

1. 要花時間搞弄設定檔（不過前面也提過了，這點見仁見智）
2. Emacs 在尺寸上比 Vim 肥很多。更加上設定檔的關係，不方便放進隨身碟裡到處帶著走。
3. Ctrl、Alt 鍵磨損的速度相當快。
4. 幾乎所有主機上都有 Vim（再怎樣也有 Vi），但不一定會有 Emacs。
5. 參加COSCUP時說自己用Emacs會被別人用像是在看瀕臨絕種的動物的眼神看待。
