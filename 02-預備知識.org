* 預備知識
以前你可能聽過 Emacs，但可能因為各種原因而沒用過或學不下去，例如網路上的教學又凌亂不連貫、有問題不知從何問起？下面整理了幾乎所有初學者都會遇到的最常見問題。聽了上面介紹想試試嗎？在你的系統上裝好 Emacs 後準備開始吧：

#+BEGIN_QUOTE
該怎麼使用終端機版的 Emacs？

    加上 =-nw= 參數：

: $ emacs -nw

#+END_QUOTE

** C-x, M-f 這些東西代表什麼意思？

    - Emacs 使用 *簡寫* 表示鍵盤組合鍵。如：
      - =C-a= 表示按住 =Ctrl= 再按 =a= 。
      - =M-f= 表示按住 =Alt/Meta= 再按 =f= ，或者按一下 =Esc= 再按 =f= 。
      - =C-x C-f= 表示按住 =Ctrl= 後，再按 =xf= 。
      - =C-x k= 表示按了 =C-x= 後，放開 ，再按一下 =k=
    - =C-x=, =C-c=, =C-u= 這三者是前綴(prefix)組合鍵，你不能單獨使用他們。
            例如開檔 =C-x C-f= 、存檔 =C-x C-s= 、離開 Emacs =C-x C-c=
    - =M-x= 是直接呼叫「指令名稱」。或者精確的說，「函數」(function)
    - =C-u= 是給命令加上參數時在使用的，初學不需要知道這個，以後再說 XD

#+BEGIN_QUOTE
其實你按的每一個按鍵，對 Emacs 來說都是在呼叫函數。例如：
- 方向鍵右 -> =函數：(right-char)=
- 方向鍵上 -> =函數：(previous-line)=
因此，只要是 =M-x= 呼叫得出的函數，你都可以重新綁定成你自己喜歡的按鍵。（方法後述）
#+END_QUOTE

** 我剛剛不知動到什麼操作了，要怎麼退出？

   操作遇到問題想取消，狂按幾下 =C-g= 就對了，就像你在 Bash/Zsh 下狂按 =C-c= 一樣。
   如果是不小心編輯到檔案內容了，按 =C-/= 或 =C-_= 可以復原（Undo）。

** Buffer 與 Frame （Window） 到底差在哪裡？

注意，這兩個東西的概念完全不同；

    - Buffer 就是你用 Emacs 時， *開啟檔案後、拿來編輯檔案的地方* 。編輯就編輯，為什麼會叫「Buffer（緩衝區）」這麼奇怪的名子呢？因為你在緩衝區裡面做的任何編輯都還不會被立刻實際寫入檔案，直到按 =C-x C-s= 存檔為止，這就是「緩衝區」的概念。
      - 順帶一題， *Minibuffer* 指的是 Emacs 視窗最下方、用來顯示訊息或者互動式操作中輸入資料的那一條。
    - Frame（現在比較常稱做 Window）的功能則是 *將 Buffer 的內容顯示在螢幕上，說白了就是「視窗」的概念。* 在 Emacs 你可以把螢幕切成多個區域，例如上下各一個、或左右各一個，每一塊就是一個 Frame。

#+BEGIN_QUOTE
其實會有 Buffer 這麼奇怪的詞完全是歷史因素，因為 Vi 與 Emacs 發明時的 70 年代，大家都還在用 =ed= 之類的行編輯器在編輯檔案，還沒有這種「輸入什麼東西、即時就可以在螢幕上見到修正」的編輯器，所以才會把編輯區叫做 Buffer。\\
而 Frame 一詞當然也是那時 GUI 都還沒發明，才沒有用我們現在比較熟悉的 Window 一詞。
-- kuanyui
#+END_QUOTE

*** 操作方式

    - 關掉目前的 Frame 是 =C-x 0= ， *但這個動作並不會把 Buffer 也一起關掉！* 即使關掉 frame，buffer 其實還活在背景中、隨時可以叫出。這一點與現在一般常見的編輯器不同，並不是關掉視窗後、檔案也會一起關閉。
      - 切換到不同的 Frame： =C-x o=
      - 將目前以外的所有 Frame 關掉： =C-x 1=
      - 將目前的 Frame 分成上下兩塊： =C-x 2=
      - 將目前的 Frame 分成左右兩塊： =C-x 3=

    - 關掉 Buffer 是 =C-x k= ， *將會真正地把檔案關掉* (kill-buffer)
      - 切換到下一個/前一個 buffer： =C-x C-<right>/<left>= （方向鍵）
      - 直接切到某個 buffer： =C-x b= （可以用 =tab= 鍵補全）
      - 開啟 buffer 管理員： =C-x C-b= （強力推薦改用 =Ibuffer= ，因為預設的非常難用）

#+BEGIN_QUOTE
為什麼要搞得那麼複雜？其實這種特性非常好用也非常常用，由於 Frame 與 Buffer 的概念是分開的，所以可以 *開多個 Frame，且每個 Frame 都顯示同個 Buffer* ，代表你可以同時開多個 Frame，同時看「一個檔案的不同部份」，不管是寫文章或寫程式時都非常方便。
#+END_QUOTE




